- name: Create certs dir
  ansible.builtin.file:
    path: "{{ step_ca_certs_dir }}"
    state: directory
    mode: "0775"

- name: Create jwk pass
  ansible.builtin.copy:
    content: "{{ step_ca_certs_jwk_pass }}"
    dest: "{{ step_ca_certs_pass_dir }}/jwk.pass"
    mode: "0700"

- name: Request a new certificate for a given domain
  maxhoesel.smallstep.step_ca_certificate:
    crt_file: "{{ item.crt_path }}"
    key_file: "{{ item.key_path }}"
    provisioner: jwk
    provisioner_password_file: "{{ step_ca_certs_pass_dir }}/jwk.pass"
    name: "{{ item.name }}"
    san: "{{ item.san }}"
    force: true
    not_after: "{{ item.not_after | default(omit) }}"
  loop: "{{ step_ca_certs }}"
  when: step_ca_certs is defined and step_ca_certs | length > 0

#- name: Complex data processing
#  debug:
#    msg: "User {{ item.key }} - Task {{ task.name }}"
#  loop: "{{ users }}"
#  vars:
#    user_tasks: "{{ item.value.tasks }}"
#    task: "{{ user_tasks }}"

#- name: Set authorized ssh key, extracting just that data from 'users'
#  ansible.posix.authorized_key:
#    user: "{{ item.0.name }}"
#    key: "{{ lookup('file', item.1) }}"
#  with_subelements:
#      - "{{ users }}"
#      - authorized

- name: Create directories for each extra_path
  ansible.builtin.file:
    path: "{{ item.1.path }}"
    mode: "{{ item.1.mode }}"
    owner: "{{ item.1.owner }}"
    group: "{{ item.1.group }}"
    state: directory
  with_subelements:
    - "{{ step_ca_certs }}"
    - extra_paths
    - skip_missing: true

- name: Copy key to extra_paths
  ansible.builtin.copy:
    remote_src: true
    src: "{{ item.0.key_path }}"
    dest: "{{ item.1.path }}"
    owner: "{{ item.1.owner }}"
    group: "{{ item.1.group }}"
    mode: "0640"
  with_subelements:
    - "{{ step_ca_certs }}"
    - extra_paths
    - skip_missing: true

- name: Copy cert to extra_paths
  ansible.builtin.copy:
    remote_src: true
    src: "{{ item.0.crt_path }}"
    dest: "{{ item.1.path }}"
    owner: "{{ item.1.owner }}"
    group: "{{ item.1.group }}"
    mode: "0644"
  with_subelements:
    - "{{ step_ca_certs }}"
    - extra_paths
    - skip_missing: true

- name: Renew a certificate
  maxhoesel.smallstep.step_ca_renew:
    crt_file: "{{ item.crt_path }}"
    key_file: "{{ item.key_path }}"
    ca_url: "{{ step_bootstrap_ca_url }}"
    password_file: "{{ step_ca_certs_pass_dir }}/jwk.pass"
    force: true
    expires_in: "{{ item.renew_after | default(omit) }}"
  loop: "{{ step_ca_certs_renew }}"
  when: step_ca_certs_renew is defined and step_ca_certs_renew | length > 0
