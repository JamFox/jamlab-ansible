# Create users and groups
- name: Create users and groups
  when: users is defined
  block:
    - name: Create primary groups
      ansible.builtin.group:
        name: "{{ item.primary_group }}"
        gid: "{{ item.primary_gid | default(omit) }}"
        state: present
      when:
        - item.primary_group is defined
        - users_create_primary_group
      with_items: "{{ users }}"
    - name: Create secondary groups
      ansible.builtin.group:
        name: "{{ item.1 }}"
        state: present
      with_subelements:
        - "{{ users }}"
        - groups
        - skip_missing: true
    - name: Create users
      ansible.builtin.user:
        name: "{{ item.name | mandatory }}"
        group: "{{ item.primary_group | default(omit)
          if users_create_primary_group else omit }}"
        groups: "{{ item.groups | default('') | join(',') }}"
        shell: "{{ item.shell | default(users_default_shell) }}"
        password: "{{ item.passwd | default(omit) }}"
        comment: "{{ item.gecos | default(omit) }}"
        home: "{{ item.homedir | default(omit) }}"
        uid: "{{ item.uid | default(omit) }}"
        system: "{{ item.system | default(omit) }}"
        createhome: "{{ false if item.system is defined and item.system or
          item.no_create_home is defined and item.no_create_home else omit }}"
      with_items: "{{ users }}"
    - name: Ensure .ssh directory exists
      ansible.builtin.file:
        path: "{{ item.homedir }}/.ssh"
        state: directory
        owner: "{{ item.name }}"
        group: "{{ item.primary_group | default(omit)
          if users_create_primary_group else omit }}"
        mode: "0700"
      loop: "{{ users }}"
      when: item.homedir is defined and item.homedir is not none and item.homedir | length > 0
    - name: Ensure /etc/AuthorizedKeys directory exists
      ansible.builtin.file:
        path: "/etc/AuthorizedKeys"
        state: directory
        owner: root
        group: root
        mode: "0755"
      when: users_auth_keys_etc
    - name: Create authorized_keys file for user
      ansible.builtin.copy:
        content: |
          {% if item.ssh_authorized_keys is defined and item.ssh_authorized_keys | length > 0 %}
          {% for key in item.ssh_authorized_keys %}
          {{ key }}
          {% endfor %}
          {% endif %}
        dest: "{{ '/etc/AuthorizedKeys/' + item.name if users_auth_keys_etc else item.homedir + '/.ssh/authorized_keys' }}"
        owner: "{{ item.name }}"
        group: "{{ item.primary_group | default(omit)
          if users_create_primary_group else omit }}"
        mode: "0600"
      loop: "{{ users }}"
      when: item.homedir is defined and item.homedir is not none and item.homedir | length > 0

# Delete users
- name: Delete users
  ansible.builtin.user:
    name: "{{ item.name | mandatory }}"
    state: absent
  with_items: "{{ users_deleted }}"
  when: users_deleted is defined

# Sudo block
- name: Setup sudo
  when: users_enable_sudo
  block:
    - name: Check for sudo
      ansible.builtin.stat: path=/etc/sudoers
      register: r_sudoers
    - name: Install sudo block
      when: not r_sudoers.stat.exists
      block:
        - name: Install sudo if Centos
          ansible.builtin.yum:
            name:
              - sudo
            state: "{{ sudo_package_state | default(default_package_state | default('present')) }}"
          when: ansible_os_family in ['CentOS', 'RedHat']
        - name: Install sudo if Debian
          ansible.builtin.apt:
            name:
              - sudo
            state: "{{ sudo_package_state | default(default_package_state | default('present')) }}"
          when: ansible_os_family == "Debian"
    - name: Include sudoers.d
      ansible.builtin.lineinfile:
        dest: /etc/sudoers
        regexp: "^#includedir "
        line: "#includedir /etc/sudoers.d"
        validate: visudo -cf %s
    - name: Setup sudo
      ansible.builtin.template:
        src: files/ansible-managed-users.jinja
        dest: /etc/sudoers.d/ansible-managed-users
        mode: "0440"
        validate: visudo -cf %s
