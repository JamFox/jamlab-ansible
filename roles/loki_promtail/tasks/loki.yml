---
- name: Install systemd-unit
  ansible.builtin.template:
    src: "systemd-loki.j2"
    dest: "/etc/systemd/system/loki.service"
    mode: '0644'
  register: unit_tpl
  notify:
    - Reload systemd loki
  when: "__loki_go_os == 'linux'"

- name: Create config directories for loki
  ansible.builtin.file:
    mode: '0755'
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ loki_config_directory }}"
    - "{{ loki_config_store }}"

- name: Setup configuration
  ansible.builtin.template:
    src: "loki.yml.j2"
    dest: "/etc/loki/loki.yml"
    mode: '0644'
  register: conf_tpl
  notify:
    - Restart systemd loki

- name: Install loki
  block:
    - name: Download loki release
      ansible.builtin.get_url:
        url: "{{ __loki_download }}"
        dest: "/tmp/{{ __loki_archive }}"
        mode: '0644'
      register: _download_release
      until: _download_release is succeeded
      retries: 5
      delay: 2

    - name: Unpack loki release
      ansible.builtin.unarchive:
        src: "/tmp/{{ __loki_archive }}"
        dest: "/tmp"
        creates: "/tmp/loki-{{ __loki_go_os }}-{{ __loki_go_arch }}"
        remote_src: true
        mode: '0644'

    - name: Copy loki to /usr/local/bin
      ansible.builtin.copy:
        src: "/tmp/loki-{{ __loki_go_os }}-{{ __loki_go_arch }}"
        dest: "/usr/local/bin/loki"
        mode: 0755
        owner: root
        group: root
        remote_src: true
      notify: Restart systemd loki
  check_mode: false
  when:
    - __loki_version != loki_version

- name: Clean-up
  ansible.builtin.file:
    path: "/tmp/{{ item }}"
    state: absent
  loop:
    - "{{ __loki_archive }}"
    - "loki-{{ __loki_go_os }}-{{ __loki_go_arch }}"
